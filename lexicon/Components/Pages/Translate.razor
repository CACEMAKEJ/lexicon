@page "/translate"
@using lexicon.Components.Services
@inject DetectLanguageService LanguageDetector
@rendermode InteractiveServer


<PageTitle>Translate</PageTitle>

<div class="container mx-auto p-4 max-w-2xl">
    <h1 class="text-3xl font-bold mb-4">Multilingual Translator</h1>

    <div class="mb-4">
        <textarea class="form-control w-full p-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500" 
                  @bind="inputText" 
                  rows="6" 
                  placeholder="Type or paste text here...">
        </textarea>
    </div>

    <button class="btn btn-primary bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out" 
            @onclick="DetectAndTranslate">
        Detect and Translate
    </button>

    @if (!string.IsNullOrEmpty(detectionResult))
    {
        <div class="mt-4 p-4 border-l-4 border-blue-500 bg-blue-50 rounded-r-lg">
            <p class="text-lg">
                <strong>Detection:</strong> <span class="font-mono text-blue-700">@detectionResult</span>
            </p>
        </div>
    }
    @if (!string.IsNullOrEmpty(translationResult))
    {
        <div class="mt-4 p-4 border-l-4 border-green-500 bg-green-50 rounded-r-lg">
            <p class="text-lg">
                <strong>Translation:</strong> <span class="text-green-700">@translationResult</span>
            </p>
        </div>
    }
</div>

@code {
    private string? inputText;
    private string? detectionResult;  
    private string? translationResult; 

    private async Task DetectAndTranslate()
    {
        Console.WriteLine($"[Translate] - Button clicked. Input length: {inputText.Length}");
        
        if (string.IsNullOrWhiteSpace(inputText))
        {
            detectionResult = "Please enter text to translate.";
            translationResult = "";
            StateHasChanged();
            Console.WriteLine("[Translate] - Input is empty, showing prompt message.");
            return;
        }

        detectionResult = "Detecting...";
        translationResult = "";
        StateHasChanged(); 
        
        Console.WriteLine("[Translate] - State set to 'Detecting...'. Calling service now.");


        string languageCode = await LanguageDetector.DetectLanguageAsync(inputText);


        Console.WriteLine($"[Translate] - Service returned language code: {languageCode ?? "NULL"}");


        if (string.IsNullOrEmpty(languageCode)) {
            detectionResult = "Could not detect language. (Check DL_KEY and server console for errors.)";
            translationResult = "";
            StateHasChanged();
            return;
        }
        
        detectionResult = $"Detected language: {languageCode}";

        if (languageCode == "en") {
            translationResult = "Text is already in English.";
        }
        else
        {
            translationResult = $"TODO: Call translation service to translate text from '{languageCode}' to 'en'.";
        }
        
        StateHasChanged();
    }
}
