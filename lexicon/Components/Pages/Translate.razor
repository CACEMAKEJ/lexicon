@page "/"
@using lexicon.Components.Services
@inject DetectLanguageService LanguageDetector
@inject TranslationService Translator 
@rendermode InteractiveServer


<PageTitle>Translate</PageTitle>

<div class="width-limiter container d-flex flex-column justify-content-center mx-auto p-4">
    <h3 class="fs-4 font-bold mb-4 " style="text-align: center; color: rgba(115, 118, 128, 0.3)">/ˈlɛksᵻk(ə)n/</h3>
    <h1 class="lexicon-heading font-bold mb-4" style="text-align: center; color: rgba(255, 255, 255, 1)">lexicon</h1>
    
    <div class="translatorTextField pt-5">
        <input @bind="inputText" type="text" placeholder="What would you like to translate?" />
        <div class="line"></div>
    </div>

    <div class="py-4">
        <button class="btn btn-primary bg-blue-600 hover:bg-blue-700 text-white font-semibold py-2 px-4 rounded-lg shadow transition duration-150 ease-in-out" 
                @onclick="DetectAndTranslate">
            Detect and Translate
        </button>
    </div>

    @if (!string.IsNullOrEmpty(detectionResult))
    {
        <div class="mt-4 border-l-4 border-blue-500 bg-blue-50 rounded-r-lg">
            <p class="text-lg">
                <strong class="text-white">Detection:</strong> <span class="font-mono text-white">@detectionResult</span>
            </p>
        </div>
    }
    @if (!string.IsNullOrEmpty(translationResult))
    {
        <div class="mt-4 border-l-4 border-green-500 bg-green-50 rounded-r-lg">
            <p class="text-lg">
                <strong class="text-white">Translation:</strong> <span class="text-white">@translationResult</span>
            </p>
        </div>
    }
</div>

@code {
    private string? inputText;
    private string? detectionResult;  
    private string? translationResult; 

    private async Task DetectAndTranslate()
    {
        if (string.IsNullOrWhiteSpace(inputText))
        {
            detectionResult = "Please enter text to translate.";
            translationResult = "";
            StateHasChanged();
            return;
        }

        detectionResult = "Detecting...";
        translationResult = "";
        StateHasChanged(); 

        string languageCode = await LanguageDetector.DetectLanguageAsync(inputText);

        if (string.IsNullOrEmpty(languageCode)) {
            detectionResult = "Could not detect language. (Check DL_KEY and server console for errors.)";
            translationResult = "";
            StateHasChanged();
            return;
        }
        
        detectionResult = $"Detected language: {languageCode}";

        if (languageCode == "en") {
            translationResult = "Text is already in English.";
        }
        else {
            translationResult = "Translating...";
            StateHasChanged(); 
            string translatedText = await Translator.TranslateAsync(inputText, languageCode, "en");

            translationResult = translatedText;
        }
        
        StateHasChanged();
    }
}
