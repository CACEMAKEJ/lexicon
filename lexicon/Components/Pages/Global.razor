@page "/global"
@using lexicon.Components.Data
@inject ITranslationRepo Repo

<h2 style="color: white;">Global Translation History</h2>

<select @onchange="FilterByLanguage">
    <option value="">-- Filter by language --</option>
    @foreach (var lang in languages)
    {
        <option value="@lang">@lang</option>
    }
</select>

@if (translations == null)
{
    <p style="color: white;">Loading...</p>
}
else if (translations.Count == 0)
{
    <p>No translations yet.</p>
}
else
{
    <ul>
        @foreach (var t in translations)
        {
            <li>
                <b style="color: white;">@t.SourceLanguage → @t.TargetLanguage:</b>
                <span style="color: white;">@t.OriginalText</span> → <i style="color: white;">@t.TranslatedText</i>
                <p style="color: white;">(@t.Timestamp.ToLocalTime())</p>
            </li>
        }
    </ul>
}

@code {
    private List<TranslationRecord> translations;
    private List<string> languages = new();
    private string selectedLanguage = "";

    protected override async Task OnInitializedAsync()
    {
        translations = await Repo.GetRecentAsync(50);
        languages = translations.Select(t => t.SourceLanguage).Distinct().ToList();
    }

    private async Task FilterByLanguage(ChangeEventArgs e)
    {
        selectedLanguage = e.Value?.ToString();

        if (string.IsNullOrEmpty(selectedLanguage))
            translations = await Repo.GetRecentAsync(50);
        else
            translations = await Repo.GetByLanguageAsync(selectedLanguage);
    }
}